package screen.student.controller;

import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.ResourceBundle;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.geometry.Insets;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.TextField;
import javafx.scene.control.TitledPane;
import javafx.scene.control.ToggleGroup;
import javafx.scene.input.ContextMenuEvent;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.GridPane;
import model.Activity;
import model.Admin;
import model.Student;

public class StudentController implements Initializable 
{
	private Student student;
	// TODO: ch∆∞a c√≥ k·ª≥ h·ªçc
	private Admin admin;
	
	// TODO: nh·∫≠n t√™n user t·ª´ file json d∆∞·ªõi ƒë√¢y l√† temp
	private String username = new String("Tr·ªãnh Tr·∫ßn Ph∆∞∆°ng Tu·∫•n");
	
	// List ch·ª©a danh s√°ch c√°c ho·∫°t ƒë·ªông c·ªßa sinh vi√™n
	private ArrayList<Activity> activityList; 
	
	//
	private ObservableList <Activity> activityListData = FXCollections.observableArrayList();
	
	// C√°c thu·ªôc t√≠nh FXML
	
	@FXML
    private Button viewActivityPaneButton;
	
	@FXML
    private Button viewRegisterPaneButton;
	
	@FXML
    private Button viewScorePaneButton;
	
	@FXML
    private AnchorPane registerActivityPane;
	
	@FXML
    private AnchorPane viewScorePane;
	
    @FXML
    private AnchorPane Student_controller;
    
    @FXML
    private Button logout_btn;
    
    @FXML
    private RadioButton viewSemester1;

    @FXML
    private RadioButton viewSemester2;

    @FXML
    private RadioButton viewSemester3;

    @FXML
    private RadioButton viewSemester4;
    
    @FXML
    private TitledPane viewSemesterList;

    @FXML
    private AnchorPane paneThanhDieuHuong;

    @FXML
    private TextField searchTextField;

    @FXML
    private ToggleGroup semesterViewActivity;

    @FXML
    private ToggleGroup semesterViewActivity1;

    @FXML
    private Label studentName;
    
    @FXML
    private AnchorPane viewActivityPane;
    
    @FXML
    private GridPane gridPane;
    
    @FXML
    private ScrollPane viewActivityScrollPane;

    @FXML
    void activityRegisterButtonClick(MouseEvent event) {
    	
    }

    @FXML
    void exitAppButtonClicked(ContextMenuEvent event) {

    }

    @FXML
    void registerPageButtonClicked(MouseEvent event) {

    }

    @FXML
    void registerSearchButtonClicked(MouseEvent event) {

    }

    @FXML
    void viewActivityPageButtonClicked(MouseEvent event) {

    }

    @FXML
    void viewScorePageButtonClicked(MouseEvent event) {

    }
    @FXML
    private void btnSubmitRegister(ActionEvent event) {
        System.out.println("Register activity button clicked");

        for (javafx.scene.Node node : gridPane.getChildren()) {
            if (node instanceof AnchorPane anchorPane) {
                Object ud = anchorPane.getUserData();
                if (ud instanceof ActivityController ac) {
                    if (ac.isSelected()) {
                        Activity activity = ac.getActivity();
                        if (!student.getRegisteredActivities().contains(activity)) {
                            student.addActivity(activity);    // üü¢ Th√™m v√†o danh s√°ch ƒë√£ ƒëƒÉng k√Ω
                            ac.markAsRegistered();            // ‚úÖ Kh√≥a tick + c·∫≠p nh·∫≠t tr·∫°ng th√°i
                        }
                    }
                }
            }
        }

        System.out.println("T·ªïng s·ªë ho·∫°t ƒë·ªông ƒë√£ ƒëƒÉng k√Ω: " + student.getRegisteredActivities().size());
    }
    // Thu·ªôc t√≠nh alert n√†y d√πng ƒë·ªÉ hi·ªán th√¥ng b√°o th√¥i :))))
    private Alert alert;
    
    
    // StudentController.java
    public void initData(Student loggedStudent) {
        this.username = loggedStudent.getUserName();   // ho·∫∑c getter b·∫°n ƒëang d√πng
        displayStudentName();                          // c·∫≠p-nh·∫≠t nh√£n t√™n sinh vi√™n
        registeredActivityDisplay();                   // n·∫°p d·ªØ li·ªáu ƒë√£ ƒëƒÉng k√Ω
    }
    // H√†m b√™n d∆∞·ªõi th·ª±c hi·ªán vi·ªác kh·ªüi t·∫°o m·ªói khi student ƒëƒÉng nh·∫≠p
    @Override
    public void initialize (URL location, ResourceBundle resources)
    {
    	this.student = new Student();
    	displayStudentName();
    	registeredActivityDisplay();

    }
//    // Th·ª±c hi·ªán vi·ªác tr·∫£ v·ªÅ danh s√°ch c√°c s·ª± ki·ªán ƒë√£ ƒëƒÉng k√Ω
//    public ObservableList <Activity> getRegisteredActivityList ()
//    {
//    	ObservableList <Activity> listData = FXCollections.observableArrayList();
//    	// TODO: try-catch d∆∞·ªõi ƒë√¢y th·ª±c hi·ªán vi·ªác nh·∫≠n d·ªØ li·ªáu c·ªßa c√°c s·ª± ki·ªán m√† sinh vi√™n ƒë√£ ƒëƒÉng k√Ω
//    	try
//    	{
////    		while(something.next())
////    		{
////    			Activity temp;
////    			temp = new Activity(something.getTitle, something.getName, something.getStatus, something.getScore);
////    			listData.add(temp);
////    		}
//    	}
//    	catch (Exception e)
//    	{
//    		e.printStackTrace();
//    	}
//    	return listData;
//    }
    
    // H√†ng v√† c·ªôt trong grid
    int row = 0;
    int column = 0;
    
    // Ph∆∞∆°ng th·ª©c n√†y th·ª±c hi·ªán vi·ªác reset l·∫°i datalist v√† th√™m v√†o m·ªçi activity ƒë√£ ƒëƒÉng k√Ω v√¥
    public void registeredActivityDisplay ()
    {
	    final String ITEM_FXML_FILE_PATH = "/screen/student/view/ActivityLayout.fxml";

	    int column = 0;
	    int row = 1;

	    try {
	    	List<Activity> activities = admin.getAllActivities();
	    	for (Activity activity : activities) {
	    		if (!student.getRegisteredActivities().contains(activity) && student != null) {
		    	    FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(ITEM_FXML_FILE_PATH));
		    	    AnchorPane anchorPane = fxmlLoader.load();
		    	    ActivityController controller = fxmlLoader.getController();
					controller.setData(activity, student);

					anchorPane.setUserData(controller);
		            // ƒê∆∞a AnchorPane v√†o grid
		            if (column == 3) { 
		                column = 0;
		                row++;
		            }


					gridPane.add(anchorPane, column++, row);
		            GridPane.setMargin(anchorPane, new Insets(20, 10, 10, 10));
	    		}

	        }
	    } catch (IOException e) {
	        e.printStackTrace();
	    }
    }
    @FXML
    // Ph∆∞∆°ng th·ª©c th·ª±c hi·ªán vi·ªác ƒë·ªïi qua l·∫°i gi·ªØa c√°c pane
    public void switchForm (ActionEvent event)
    {
    	if (event.getSource() == viewRegisterPaneButton)
    	{
    		registerActivityPane.setVisible(true);
    		viewActivityPane.setVisible(false);
    		viewScorePane.setVisible(false);
    	}
    	else if (event.getSource() == viewActivityPaneButton)
    	{
    		registerActivityPane.setVisible(false);
    		viewActivityPane.setVisible(true);
    		viewScorePane.setVisible(false);
    	}
    	else if (event.getSource() == viewScorePaneButton)
    	{
    		registerActivityPane.setVisible(false);
    		viewActivityPane.setVisible(false);
    		viewScorePane.setVisible(true);
    	}
    }
    
    // C·∫£nh b√°o ng∆∞·ªùi ch∆°i khi tho√°t ch∆∞∆°ng tr√¨nh, ƒë·ªìng th·ªùi n·∫øu nh∆∞ m√† student tho√°t th√¨ show l·∫°i c·ª≠a s·ªï login
    public void logout ()
    {
    	try 
    	{
    		alert = new Alert(AlertType.CONFIRMATION);
    		alert.setTitle("Ch√∫ √Ω!!!");
    		alert.setHeaderText(null);
    		alert.setContentText("B·∫°n c√≥ ch·∫Øc mu·ªën tho√°t ch∆∞∆°ng tr√¨nh kh√¥ng ?");
    		Optional<ButtonType> option = alert.showAndWait();
    		
    		if (option.get().equals(ButtonType.OK))
    		{
    			// ·∫®n ƒëi student layout
    			logout_btn.getScene().getWindow().hide();
    			
    			// G·ªçi l·∫°i trang ƒëƒÉng nh·∫≠p
    			new view.login.main.Main().setVisible(true);
    		}
    	}
    	catch (Exception e)
    	{
    		e.printStackTrace();
    	}
    }
    
    // Ph∆∞∆°ng th·ª©c ƒë·ªÉ hi·ªÉn th·ªã t√™n sv
    public void displayStudentName ()
    {
    	String student_name = username;
    	student_name = student_name.substring(0, 1).toUpperCase() + student_name.substring(1);
    	studentName.setText(student_name);
    }
    


}

